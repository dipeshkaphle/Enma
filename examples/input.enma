let z = "abc";

let x = 10;

fn is_origin(x: int, y: int){
	let ans = true;
	if (x == 0 and y == 0 ){
		ans= true;
	}else{
		ans= !true;
	}
	return ans;
}


/* THis is sum function
It sums from 0 to n inclusive
*/

fn sum(n: int ): int  {
	let i : int = 0;
	let sm : int = 0;
	while( i <= n){
		sm = sm + i;
		i =  i + 1;
	}
	/* 
	I want it to be able to return even if we just have

	```
	sm
	```

	without the return in front of it. Like in rust. Not supported 
	as of now though.
	*/
	return sm;
}

fn fib(n: int) : int{
	if(n <= 1){
		return n;
	}
	return fib(n-1) + fib(n-2);
}

println sum(100);

let j = 10;
let y = 1;
while(y<=j){
	println fib(y);
	y = y + 1;
}
